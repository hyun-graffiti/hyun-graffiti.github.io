{"version":3,"file":"component---src-pages-404-tsx-d270ab3c901635ba7b8a.js","mappings":"6KAWA,MAAMA,EAAc,YAeL,SAASC,EAAI,GAMd,IANc,MAC1BC,EAAK,YACLC,EAAW,SACXC,EAAQ,MACRC,EAAK,SACLC,GACS,EACT,MACEC,MAAM,aAAEC,GACRC,MAAQC,UAAWC,KACjBC,EAAAA,EAAAA,IAAeZ,GAEba,EAAW,CACfX,MAAOA,QAAAA,EAASM,EAAaN,MAC7BC,YAAaA,QAAAA,EAAeK,EAAaL,YACzCW,QAAU,GAAEN,EAAaM,UAAUV,QAAAA,EAAY,KAC/CC,MAAOA,QAAAA,EAASM,GAGlB,OACEI,EAAAA,EAAAA,MAAAA,EAAAA,SAAAA,CAAAA,SAAAA,EACEC,EAAAA,EAAAA,KAAAA,QAAAA,CAAAA,SAAQH,EAASX,SAEjBc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,QACXD,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,cAAcC,QAASN,EAASV,eAC3Ca,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,WAAWC,QAAQ,2CAC9BH,EAAAA,EAAAA,KAAAA,OAAAA,CAAMI,UAAU,eAAeD,QAAQ,6BAEvCH,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,UAAUF,QAAQ,aACjCH,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,WAAWF,QAASN,EAASX,SAC5Cc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,iBAAiBF,QAASN,EAASV,eAClDa,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,WAAWF,QAASN,EAASR,SAC5CW,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,SAASF,QAASN,EAASC,WAC1CE,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,SAAS,eAAeF,QAASN,EAASX,SAEhDc,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,eAAeC,QAAQ,aAClCH,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAASX,SAC7Cc,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,sBAAsBC,QAASN,EAASV,eACnDa,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAASR,SAC7CW,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,eAAeC,QAAQ,YAClCH,EAAAA,EAAAA,KAAAA,OAAAA,CAAME,KAAK,kBAAkBC,QAAQ,WAWpCb,IAGP,C,0IC5EA,MAAMgB,EAAUC,EAAAA,QAAOC,IAAG,YAAAC,YAAAA,kBAAAC,YAAAA,gBAAVH,CAAU,2EAOpBI,EAAQJ,EAAAA,QAAOC,IAAG,YAAAC,YAAAA,gBAAAC,YAAAA,gBAAVH,CAAU,8EASlBK,EAAcL,EAAAA,QAAOC,IAAG,YAAAC,YAAAA,sBAAAC,YAAAA,gBAAVH,CAAU,8FAUxBM,GAAWN,EAAAA,EAAAA,SAAOO,EAAAA,IAAK,YAAAL,YAAAA,mBAAAC,YAAAA,gBAAZH,CAAY,mDAMd,SAASQ,IACtB,OACEhB,EAAAA,EAAAA,MAACO,EAAO,CAAAhB,SAAAA,EACNU,EAAAA,EAAAA,KAACW,EAAK,CAAArB,SAAC,qBACPU,EAAAA,EAAAA,KAACY,EAAW,CAAAtB,SAAC,wBACbU,EAAAA,EAAAA,KAACa,EAAQ,CAACG,GAAG,IAAG1B,SAAC,cAGvB,CAEO,MAAM2B,EAAe,KAAMjB,EAAAA,EAAAA,KAACf,EAAAA,EAAG,G","sources":["webpack://developer-hyun/./src/components/common/Seo.tsx","webpack://developer-hyun/./src/pages/404.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport { ReactNode } from 'react'\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: ReactNode\n}\n\nconst METADATA_QUERY = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    file(name: { eq: \"thumbnail\" }) {\n      publicURL\n    }\n  }\n`\n\nexport default function SEO({\n  title,\n  description,\n  pathname,\n  image,\n  children,\n}: SEOProps) {\n  const {\n    site: { siteMetadata },\n    file: { publicURL: defaultImage },\n  } = useStaticQuery(METADATA_QUERY)\n\n  const metadata = {\n    title: title ?? siteMetadata.title,\n    description: description ?? siteMetadata.description,\n    siteUrl: `${siteMetadata.siteUrl}${pathname ?? ''}`,\n    image: image ?? defaultImage,\n  }\n\n  return (\n    <>\n      <title>{metadata.title}</title>\n\n      <html lang=\"ko\" />\n      <meta name=\"description\" content={metadata.description} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={metadata.title} />\n      <meta property=\"og:description\" content={metadata.description} />\n      <meta property=\"og:image\" content={metadata.image} />\n      <meta property=\"og:url\" content={metadata.siteUrl} />\n      <meta property=\"og:site_name\" content={metadata.title} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={metadata.title} />\n      <meta name=\"twitter:description\" content={metadata.description} />\n      <meta name=\"twitter:image\" content={metadata.image} />\n      <meta name=\"twitter:site\" content=\"@사용자이름\" />\n      <meta name=\"twitter:creator\" content=\"@사용자이름\" />\n\n      {/* <meta\n          name=\"google-site-verification\"\n          content=\"웹 마스터 도구가 제공하는 Meta 태그\"\n        />\n        <meta\n          name=\"naver-site-verification\"\n          content=\"웹 마스터 도구가 제공하는 Meta 태그\"\n        /> */}\n\n      {children}\n    </>\n  )\n}\n","import { Link, HeadFC } from 'gatsby'\nimport styled from 'styled-components'\nimport SEO from '../components/common/Seo'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 150px 0;\n`\n\nconst Title = styled.div`\n  font-size: 30px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`\n\nconst Description = styled.div`\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`\n\nconst PageLink = styled(Link)`\n  margin-top: 30px;\n  font-size: 15px;\n  color: inherit;\n`\n\nexport default function NotFoundPage() {\n  return (\n    <Wrapper>\n      <Title>페이지를 찾을 수 없습니다.</Title>\n      <Description>다른 콘텐츠를 보러 가보시겠어요?</Description>\n      <PageLink to=\"/\">메인 페이지로</PageLink>\n    </Wrapper>\n  )\n}\n\nexport const Head: HeadFC = () => <SEO />\n"],"names":["METADATA_QUERY","SEO","title","description","pathname","image","children","site","siteMetadata","file","publicURL","defaultImage","useStaticQuery","metadata","siteUrl","_jsxs","_jsx","lang","name","content","httpEquiv","property","Wrapper","styled","div","displayName","componentId","Title","Description","PageLink","Link","NotFoundPage","to","Head"],"sourceRoot":""}